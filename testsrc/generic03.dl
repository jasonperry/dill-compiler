** First example of datatype with a generic field

module generic03 is
open stdio;

type NumThing(t) is record
   count: Int,
   thing: t;
/type

** Do I want to allow implicit type variables? Not yet, I guess
** TODO: it thought t was redeclared.
proc (u) showCount(th: NumThing(u)) do
   printInt(th.count);
/proc

/module

(* toplevel code *)
open stdio;
open generic03;

proc main() do
   var nt1: NumThing(String) = {count=42, thing="Hello"};
   var nt2: NumThing(Float) = {count=43, thing=33.3333};

   (* Here the argument is a pointer because it's a generic field,
      but the parameter is a plain float. Codegen needs cast and load. *)
   printFloat(nt2.thing);
   printString(nt1.thing);
   var doublit : Float = nt2.thing * 2.0;
   printFloat(doublit);

   (* Passing two types of generic structs. *)
   showCount(nt1);
   showCount(nt2);
/proc


