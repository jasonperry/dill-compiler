(* nested mutable record types, mutating a field *)
module mut03 begin

open stdio;

type Complex is struct
   mut i: Float,
   mut j: Float;

(* This is a mutable type because it has fields of mutable type.
 * The fields could change but can't be reassigned. *)
type TwoComplexes is struct
   mut foist: Complex, (* deep mutability check! *)
   secint: Complex;

proc bumpj(#x: Complex)
begin
   x.j = x.j + 1.0;
end bumpj

export proc main()
begin
   var cpx: Complex = {i=2.0, j=1.111};
   var cpx2: Complex = {i=3.0, j=2.1};

   var tc: TwoComplexes = {foist=cpx, secint=cpx2};

   printFloat(tc.foist.j);
   printFloat(tc.secint.j);

   (* HERE: passing mutable varexp. *)
   bumpj(#tc.foist);

   printFloat(tc.foist.j);   (* 2.111 *)
   printFloat(tc.secint.j);  (* 2.1 *)
end main

end mut03