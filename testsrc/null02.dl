(* nullable type with conditional assignment *)
module null02 begin

open stdio;

export proc main()
begin
  var maybeInt: Int?;
  maybeInt = null;
  maybeInt = 5;

  var maybe2 : Int? = null;
  maybe2 = maybeInt;  (* value types, it's a copy (whew) *)

  (* Is it too implicit to assign an int to a nullable variable? 
   * That was kinda my whole point, to make nullables more usable *)

  var intRes : Int;
  if intRes ?= maybeInt then
    printInt(intRes); 
  (* ?printInt(maybeInt) (* just a whim *) *)
  endif

  (* try again with a declaration *)
  if var res2 ?= maybeInt then
    printInt(res2);
  endif

  var maybeFloat: Float?;
  maybeFloat = 5.5;
  var f: Float;
  if (f ?= maybeFloat) then
    printFloat(f);
  else
    printString("maybeFloat is null");
  endif

end main

end null02