(* first example of recursive data type *)
module rectype01 is

open stdio;
   
type FloatList is rec record
   value: Float,
   next: FloatList?;  (* record-with-pointer, not pointer-to-record *)

export proc main()
is
   var fl1: FloatList;
   (* have to promote to a nullable record, get a pointer and cast it to i8* *)
   fl1 = { value=1.44, next=null };
   printFloat(fl1.value); (* requires dereference *)

   var fl2: FloatList = { value=2.0, next=fl1 }; 
   (* woops, did I remove decls in if statements? *)
   var innerRec: FloatList;
   if innerRec ?= fl2.next then
      printFloat(innerRec.value);
   /if
   
   var fl3: FloatList = { value=3.0, next={value=4.0, next=null}};

   var fl4: FloatList? = fl3.next; 

   var innerRec2: FloatList;
   if innerRec2 ?= fl3.next then
      printFloat(innerRec2.value);
   /if
   
/proc
/module


