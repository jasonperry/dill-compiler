(* mutually recursive data type *)
module rectype02 begin

open stdio;
   
type IntNode is rec struct
   value: Int,
   mut next: FloatNode?;

type FloatNode is rec struct
   value: Float,
   mut next: CharNode?; 

(* Need cycle checking in analysis, because this one has no forward refs. *)
type CharNode is rec struct
   value: Byte,
   mut next: IntNode?;

(* This isn't a recursive type. *)
type IfcGraph is struct
   g: IntNode;


export proc main()
begin
   var inode: IntNode = { value=19, next={value=17.7, next=null}};
   printInt(inode.value);
   var fnode: FloatNode = {value=4.3, next={value='f', next=null}};
   printFloat(fnode.value);
   var cnode: CharNode = {value='f', next={value=18, next=fnode}};
   printBytes([cnode.value]);
   
end main
end rectype02