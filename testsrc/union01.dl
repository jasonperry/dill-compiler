(* first example of variant (formerly union) types *)

open stdio;

type Num is variant
  | f: Float
  | i: Int
  | nan;

export proc main() => Int
begin
  printString("whoopee.\n");
  (* var u1: Num = Num|i(4);
  var u2 = Num|f(5.5); *)
  (* var u3 = Num.null; *)

  (* case u1
    of Num.null begin  (* can't have begin without an end *)
      pass; 
    of Num.i(i) do (* redundant...but OK*)
      printInt(i);
    of Num.f(f) then (* fewer keywords is good, it is like an if *)
      printFloat(f);
  endcase *)
  return 0;

end main

