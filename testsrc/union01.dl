(* first example of variant (formerly union) types *)
module union01 begin

open stdio;

type Num is variant
  | f: Float
  | i: Int
  | nan;

type Flags is variant
  | local
  | remote
  | gone;

export proc main() => Int
begin
  var u1: Num = Num|i(4);
  var u2 = Num|f(5.5);
  var flag1 = Flags|remote;
  printString("whoopee\n");
  (* var u3 = Num.null; *)

  case u1
    of Num|null then
      printString("doodoo\n");  (* todo: pass *)
    of Num|i(i) then
      printInt(i);
    of Num|f(f) then
      printFloat(f);
  endcase 
  return 0;

end main

end union01