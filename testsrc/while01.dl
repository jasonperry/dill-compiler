(* module while01 is *)

import stdio;

var i = 14;  (* try some global vars *)

proc main() -> Int
do  (* i'm actually thinking of ~is~ for procs too. It's a definition. *)
   var j: Int = 0;
   while (i >= 0) do
      j = 2*i+1;  (* declaring j each time through eats memory. Not good. 
                 * could the LLVM optimizer fix it?
                 * I think I fixed it with lifting. *)
      stdio::printInt(i);
      i = i - 1;
   /while

   stdio::printInt(i);
   stdio::printInt(j);

   return 0;

/proc (* prevent identifiers being named proc, while, module, if *)

(* /module *)